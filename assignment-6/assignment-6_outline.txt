Entity/Attributes

[PARENT, CHILD of Resident]
User - id(pk), Firstname, Lastname, Address, Email, Telno, ResidentId(fk), Type
[PARENT] 
Location - id(pk), Location Name 
[PARENT] 
Payment - id(pk), PaymentName  //Payment - visa/mc/cash - optional
[PARENT]
FeeSchedule - id(pk), start_date, end_date, period_in_days, amount_per_period
[PARENT, CHILD of FeeSchedule] 
Resident - id(pk), ResiName, FeescheduleID(fk)   //Resident/Non-Resident
[PARENT] 
College - id(pk),Name, Address, Telno
[CHILD of College, Location]  
Department - id(pk), Name, Locid(fk), Collegeid(fk)
[CHILD of Department]  
Course - id(pk), CourseNo, CourseName, Prereq, Deptid(fk)
[CHILD of Course, User(instructor) and Location]  
Section - id(pk), SectionNo, Courseid(fk), Locationid(fk), starttime, endtime, startdate, enddate, userid(fk)
[CHILD of User, Section, Payment] 
StudentRegistration or Student_Fee - id(pk), StudentID(fk), SectionId(fk), FeeStatus, Paymentid(fk)

//student-section
Catalog - view (query - Department, Course, Section, Location)

Relationships - will be represented in Crow Notation
- User(parent) has
  ->zero or more Section(child)
  ->zero or more Student_Fee(child)
- Location(parent) has
  ->zero or more Department(child)
- Payment(parent) has
  ->one Student_Fee(child)
- Fee_Schedule(parent) has
  ->zero or more Resident(child)
- Resident(parent) has
  ->zero or more User(child)
- College(parent) has
  ->zero or more Department(child)
- Department(parent) has
  ->zero or more Course(child)
- Course(parent) has
  ->zero or more Section(child)
- Section(parent) has
  ->zero or more Student_Fee(child)
- Student_Fee
